anscombeH332(h2Data)
anscombeH332 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
master_data_y3 <- lm(amountStudents ~ billion_eur, data=x)
}
lm(amountStudents ~ billion_eur, data=x)
plot(lm(amountStudents ~ billion_eur, data=h2Data))
plot(lm(amountStudents ~ billion_eur, data=h2Data))
plot(lm(amountStudents ~ billion_eur, data=h2Data))
library(ggplot2)
ggplot(h2Data, aes(x = h2Data.billion_eur, y = h2Data.amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
library(ggplot2)
ggplot(h2Data, aes(x = h2Data.billion_eur, y = h2Data.amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(h2Data, aes(x = h2Data$billion_eur, y = h2Data$amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
anscombeH332 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
ggplot(x, aes(x = x$billion_eur, y = x$amountStudents)) +
+     geom_point() +
+     stat_smooth(method = "lm", col = "red")
}
anscombeH332(h2Data)
anscombeH332 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
ggplot(x, aes(x = x$billion_eur, y = x$amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH332(h2Data)
anscombeH332(h2Data)
anscombeH332 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
ggplot(x, aes(x = x$billion_eur, y = x$amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
plotModel(lrH2)
lrH2 <- lm(amountStudents ~ billion_eur, data=h2Data)
plotModel(lrH2)
?ggplot
ggplot(h2Data, aes(x = h2Data$billion_eur, y = h2Data$amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red", main ="123")
ggplot(h2Data, aes(x = h2Data$billion_eur, y = h2Data$amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red", main ="123")
ggplot(h2Data, aes(x = h2Data$billion_eur, y = h2Data$amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
lrH2 <- lm(amountStudents ~ billion_eur, data=h2Data)
ggplot(lrH2 + geom_point() + stat_smooth(method = "lm", col = "red")
)
ggplot(lrH2, aes(x = lrH2$billion_eur, y = lrH2$amountStudents) + geom_point() + stat_smooth(method = "lm", col = "red"))
ggplot(lrH2 + geom_point() + stat_smooth(method = "lm", col = "red")
ggplot(h2Data, aes(x = h2Data$billion_eur, y = h2Data$amountStudents)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
anscombeH1112 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
lrH2Prediction <- cbind(x, predict(lrH2, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH1112(h2Data)
anscombeH1112(h2Data)
h2Data <- prepareDataH2()
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
#lrH2Prediction <- cbind(x, predict(lrH2, interval = 'confidence'))
#ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
lrH2Prediction <- cbind(x, predict(lrH2, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
lrH2Prediction <- cbind(x, predict(lrH2, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
aa <- lrH2
lrH2Prediction <- cbind(x, predict(aa, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2(h2Data)
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
aa <- lrH2
lrH2Prediction <- cbind(x, predict(aa, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
summary(lrH2)
}
anscombeH2(h2Data)
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
aa <- lrH2
lrH2Prediction <- cbind(x, predict(aa, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
summary(lrH2)
}
reg <- functuion(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
reg <- functuion(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red"))
}
reg <- functuion(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents) + geom_point() + stat_smooth(method = "lm", col = "red"))
}
reg <- function(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents) + geom_point() + stat_smooth(method = "lm", col = "red"))
}
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
reg(lrH2, x)
}
anscombeH2(h2Data)
reg <- function(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2(h2Data)
reg <- function(lm, d){
lrH2Prediction <- cbind(d, predict(lm, interval = 'confidence'))
lmPlot <- ggplot(lrH2Prediction, aes(x = billion_eur, y = amountStudents)) + geom_point() + stat_smooth(method = "lm", col = "red")
}
anscombeH2(h2Data)
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
#reg(lrH2, x)
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
#reg(lrH2, x)
}
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
e <- lrH2
summary(e)
#reg(lrH2, x)
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
e <- lrH2
summary(e)
reg(lrH2, x)
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
#e <- lrH2
summary(e)
#reg(lrH2, x)
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
#lrH2 <- lm(amountStudents ~ billion_eur, data=x)
#e <- lrH2
#summary(e)
#reg(lrH2, x)
}
anscombeH2(h2Data)
anscombeH2 <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
#lrH2 <-
#e <- lrH2
#summary(e)
reg(lm(amountStudents ~ billion_eur, data=x), x)
}
anscombeH2(h2Data)
anscombeH2(h2Data)
anscombeH2(h2Data)
anscombeFFFFF <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
}
anscombeFFFFF(h2Data)
anscombeFFFFF(h2Data)
anscombeFFFFF <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
}
anscombeFFFFF <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
#summary(lrH2)
}
anscombeFFFFF(h2Data)
anscombeFFFFF <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lm(amountStudents ~ billion_eur, data=x)
#summary(lrH2)
}
anscombeFFFFF(h2Data)
anscombeFFFFF(h2Data)
anscombeFFFFF <- function(x){
print(x)
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
#lm(amountStudents ~ billion_eur, data=x)
#summary(lrH2)
}
anscombeFFFFF(h2Data)
run_hypothesis2(h2Data)
anscombeH2 <- function(x){
print(x)
#xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
}
anscombeH2(h2Data)
r <- function(x){}
r <- function(x){
xyplot(amountStudents ~ billion_eur, data=x, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
}
x <- function(x){
lrH2 <- lm(amountStudents ~ billion_eur, data=x)
summary(lrH2)
}
r(h2Data)
r(h2Data)
x(h2Data)
f <- function(d){
r(d)
x(d)
}
f(h2Data)
f(h2Data)
#Load packages required
install.packages("processx")
install.packages("devtools")
#devtools::install_github("klutometis/roxygen")
install.packages("roxygen2")
require(devtools)
require(roxygen2)
#Load packages required
install.packages("processx")
install.packages("devtools")
#devtools::install_github("klutometis/roxygen")
install.packages("roxygen2")
require(devtools)
require(roxygen2)
newPackageName <- "qF"
parentDir = "C:/Users/D062531/OneDrive - SAP SE/Docs/SAP-Arbeitgeber/Ausbildung/Masterprogramm/Korrespondenz/Datenablage/Semester 1/Quantitative Forschungsmethoden/R/workspace/customPackages"
#set directory
setwd(parentDir)
#create package in this directory
create_package(newPackageName)
dirOfPackage <- paste0("C:/Users/D062531/OneDrive - SAP SE/Docs/SAP-Arbeitgeber/Ausbildung/Masterprogramm/Korrespondenz/Datenablage/Semester 1/Quantitative Forschungsmethoden/R/workspace/customPackages/", newPackageName)
setwd(dirOfPackage)
document()
dirOfPackage <- paste0("C:/Users/D062531/OneDrive - SAP SE/Docs/SAP-Arbeitgeber/Ausbildung/Masterprogramm/Korrespondenz/Datenablage/Semester 1/Quantitative Forschungsmethoden/R/workspace/customPackages/", newPackageName)
setwd(dirOfPackage)
document()
setwd(parentDir)
install(newPackageName)
remove.packages("qF", lib="~/R/win-library/3.5")
pathToPackage <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(pathToPackage)
install.packages(pathToPackage, repos = NULL, type = "source")
library("qF")
init_projekt()
dataH2 <- prepareDataH2()
#grafical printout
xyplot(amountStudents ~ billion_eur, data=dataH2, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
#Analyze data
cnt <- 10000
analyzeCovariance(dataH2, cnt)
analyseCorrelationCoefficient(dataH2, cnt)
summary(lm(amountStudents ~ billion_eur, data=dataH2))
plotLmH2(dataH2)
dataH2 <- prepareDataH2()
#grafical printout
xyplot(amountStudents ~ billion_eur, data=dataH2, xlab="Billion Euro", ylab="Amount Students", main="Scatterplot: Amount Students ~ Billion Euro")
#Analyze data
cnt <- 10000
analyzeCovariance(dataH2, cnt)
analyseCorrelationCoefficient(dataH2, cnt)
summary(lm(amountStudents ~ billion_eur, data=dataH2))
plotLmH2(dataH2)
remove.packages("qF", lib="~/R/win-library/3.5")
pathToPackage <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(pathToPackage)
install.packages(pathToPackage, repos = NULL, type = "source")
library("qF")
init_projekt()
dataH2 <- prepareDataH2()
#grafical printout
xyplot(amountStudents ~ billion_eur, data=dataH2, xlab="BIP/Year [Billion Euros]", ylab="Amount Students/Year", main="Scatterplot: Amount Students/Year ~ BIP/Year [Billion Euros]")
#Analyze data
cnt <- 10000
analyzeCovariance(dataH2, cnt)
analyseCorrelationCoefficient(dataH2, cnt)
summary(lm(amountStudents ~ billion_eur, data=dataH2))
plotLmH2(dataH2)
summary(lm(amountStudents ~ billion_eur, data=dataH2))
install.packages("devtools")
remove.packages("qF", lib="~/R/win-library/3.5")
library("devtools")
devtools::install_github("GPclips/qF")
library(qF)
remove.packages("qF", lib="~/R/win-library/3.5")
library("devtools")
devtools::install_github("GPclips/qF")
remove.packages("qF", lib="~/R/win-library/3.5")
install.packages("devtools")
library("devtools")
devtools::install_github("GPclips/qF")
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("GPclips/qF")
library("qF")
init_projekt()
remove.packages("qF", lib="~/R/win-library/3.5")
install.packages("devtools")
library("devtools")
devtools::install_github("GPclips/qF")
library("qF")
init_projekt()
dataH2 <- prepareDataH2()
#Graphical printout
xyplot(amountStudents ~ billion_eur, data=dataH2, xlab="BIP/Year [Billion Euros]", ylab="Amount Students/Year", main="Scatterplot: Amount Students/Year ~ BIP/Year [Billion Euros]")
#Analyze data
cnt <- 10000
analyzeCovariance(dataH2, cnt)
analyseCorrelationCoefficient(dataH2, cnt)
summary(lm(amountStudents ~ billion_eur, data=dataH2))
plotLmH2(dataH2)
dataH3 <- prepareDataH3()
#Graphical Printout
bargraph(~toJapan | gender, success = "Yes", data = dataH3, type = "percent", main = "Barchart: Percentage Male and Female applying for Japan", xlab = "Applying for Japan", ylab = "Percentage")
prop(requestedCountry~gender, success = "Japan", data = dataH3)
#Analyze Data
female <- dataH3 %>% filter(gender == "Female")
maleJapan <- dataH3 %>% filter(gender == "Male")
propMaleToJapan <- prop(~toJapan, success = "Yes", data = maleJapan)
cnt <- 10000
set.seed(007)
bootPercentFemale <- analyzePercentJapan(female, cnt)
pValueH3 <- prop(~ t <= propMaleToJapan, data = bootPercentFemale)
print(pValueH3)
detach("package:qF", unload=TRUE)
remove.packages("qF", lib="~/R/win-library/3.5")
install.packages("devtools")
library("devtools")
devtools::install_github("GPclips/qF")
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("GPclips/qF")
devtools::install_github("GPclips/qF")
devtools::install_github("GPclips/qF")
library("qF")
init_projekt()
dataH3 <- prepareDataH3()
#Graphical Printout
bargraph(~toJapan | gender, success = "Yes", data = dataH3, type = "percent", main = "Barchart: Percentage Male and Female applying for Japan", xlab = "Applying for Japan", ylab = "Percentage")
prop(requestedCountry~gender, success = "Japan", data = dataH3)
#Analyze Data
female <- dataH3 %>% filter(gender == "Female")
maleJapan <- dataH3 %>% filter(gender == "Male")
propMaleToJapan <- prop(~toJapan, success = "Yes", data = maleJapan)
cnt <- 10000
set.seed(007)
analyzePercentJapan(female, cnt)
bootPercentFemale <- analyzePercentJapan(female, cnt)
histogram(~ bootPercentFemale$t, xlab = "Percent Female", ylab = "Density", main="Histogram: Percent Female going to Japan")
pValueH3 <- prop(~ t <= propMaleToJapan, data = bootPercentFemale)
print(pValueH3)
dataH3 <- prepareDataH3()
#Graphical Printout
bargraph(~toJapan | gender, success = "Yes", data = dataH3, type = "percent", main = "Barchart: Percentage Male and Female applying for Japan", xlab = "Applying for Japan", ylab = "Percentage")
prop(requestedCountry~gender, success = "Japan", data = dataH3)
#Analyze Data
female <- dataH3 %>% filter(gender == "Female")
maleJapan <- dataH3 %>% filter(gender == "Male")
propMaleToJapan <- prop(~toJapan, success = "Yes", data = maleJapan)
cnt <- 10000
set.seed(007)
analyzePercentJapan(female, cnt)
bootPercentFemale <- analyzePercentJapan(female, cnt)
histogram(~ bootPercentFemale$t, xlab = "Percent Female", ylab = "Density", main="Histogram: Percent Female going to Japan")
pValueH3 <- prop(~ t <= propMaleToJapan, data = bootPercentFemale)
print(pValueH3)
library("qF")
init_projekt()
#Prepare Data
dataH1 <- prepareDataH1()
#Graphical Printout
bargraph(~toJapan | gender, success = "Yes", data = dataH1, type = "percent", main = "Barchart: Percentage Male and Female applying for Japan", xlab = "Applying for Japan", ylab = "Percentage")
cat("------------------------ Percentage students going to Japan (by gender)", fill=TRUE)
prop(requestedCountry~gender, success = "Japan", data = dataH1)
#Analyze Data
female <- dataH1 %>% filter(gender == "Female")
male <- dataH1 %>% filter(gender == "Male")
propMaleToJapan <- prop(~toJapan, success = "Yes", data = male)
cat(propMaleToJapan, fill=TRUE, labels = "Percentage male going to Japan: ")
cat("------------------------ Bootstrap: Percent Female going to Japan", fill=TRUE)
cnt <- 10000
cat(cnt, fill=TRUE, labels = "Using n Itterations: ")
bootPercentFemale <- analyzePercentJapan(female, cnt)
histogram(~ bootPercentFemale$t, xlab = "Percent Female", ylab = "Density", main="Histogram: Percent Female going to Japan")
cat("------------------------ Calculate pValue", fill=TRUE)
pValueH1 <- prop(~ t <= propMaleToJapan, data = bootPercentFemale)
cat(pValueH1, fill=TRUE, labels = "pValue: ")
#Prepare Data
dataH2 <- prepareDataH2()
#Graphical printout
xyplot(y ~ x, data=dataH2, xlab="Customers' Age [Years]", ylab="Time span from oportunity to deal [Day(s)]", main="Scatterplot: Time span from oportunity to deal [Day(s)] ~ Customers' Age [Years]")
#Analyze data
cat("------------------------ Bootstrap: Covariance and Correlation Coefficient", fill=TRUE)
cnt <- 10000
c <- analyzeCovariance(dataH3, cnt)
#Prepare Data
dataH2 <- prepareDataH2()
#Graphical printout
xyplot(y ~ x, data=dataH2, xlab="Customers' Age [Years]", ylab="Time span from oportunity to deal [Day(s)]", main="Scatterplot: Time span from oportunity to deal [Day(s)] ~ Customers' Age [Years]")
#Analyze data
cat("------------------------ Bootstrap: Covariance and Correlation Coefficient", fill=TRUE)
cnt <- 10000
c <- analyzeCovariance(dataH2, cnt)
histogram(~ c$t, xlab = "Covariance", ylab = "Density", main="Histogram: COV(Customers' Age [Years], Time span from oportunity to deal [Day(s)])")
cc <- analyseCorrelationCoefficient(dataH2, cnt)
histogram(~ cc$t, xlab = "Correlation Coefficient", ylab = "Density", main="Histogram: COR(Customers' Age [Years], Time span from oportunity to deal [Day(s)])")
cat("------------------------ LM: amountStudents ~ billion_eur", fill=TRUE)
lmH2 <- lm(y ~ x, data=dataH2)
cat("------ Summary ------", fill=TRUE)
summary(lmH2)
cat("------ Anova ------", fill=TRUE)
anova(lmH2)
plotLm(dataH2, "Customers' Age [Years]", "Time span from oportunity to deal [Day(s)]", "LM: Time span from oportunity to deal [Day(s)] ~ Customers' Age [Years]")
#Prepare Data
dataH1 <- prepareDataH1()
#Graphical Printout
bargraph(~toJapan | gender, success = "Yes", data = dataH1, type = "percent", main = "Barchart: Percentage Male and Female applying for Japan", xlab = "Applying for Japan", ylab = "Percentage")
cat("------------------------ Percentage students going to Japan (by gender)", fill=TRUE)
prop(requestedCountry~gender, success = "Japan", data = dataH1)
#Analyze Data
female <- dataH1 %>% filter(gender == "Female")
male <- dataH1 %>% filter(gender == "Male")
propMaleToJapan <- prop(~toJapan, success = "Yes", data = male)
cat(propMaleToJapan, fill=TRUE, labels = "Percentage male going to Japan: ")
cat("------------------------ Bootstrap: Percent Female going to Japan", fill=TRUE)
cnt <- 10000
cat(cnt, fill=TRUE, labels = "Using n Itterations: ")
bootPercentFemale <- analyzePercentJapan(female, cnt)
histogram(~ bootPercentFemale$t, xlab = "Percent Female", ylab = "Density", main="Histogram: Percent Female going to Japan")
cat("------------------------ Calculate pValue", fill=TRUE)
pValueH1 <- prop(~ t <= propMaleToJapan, data = bootPercentFemale)
cat(pValueH1, fill=TRUE, labels = "pValue: ")
